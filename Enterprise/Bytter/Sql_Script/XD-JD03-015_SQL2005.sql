--修改日期：20120905
--修改人：叶爱军
--修改内容：XD-JD03-015 系统功能-借款申请界面
--修改内容：CMS_PROVIDE_LOAN_INFO 增加字段 借款类别
--参数设置：
ALTER TABLE CMS_PROVIDE_LOAN_INFO ADD CLC_ID VARCHAR(10);
GO
DECLARE @CURRENTUSER SYSNAME
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_DESCRIPTION', 
   '借款类别',
   'USER', @CURRENTUSER, 'TABLE', 'CMS_PROVIDE_LOAN_INFO', 'COLUMN', 'CLC_ID'
GO

--修改日期：20120905
--修改人：叶爱军
--修改内容：XD-JD03-015 系统功能-借款申请界面
--修改内容：CMS_LOAN_INFO 增加字段 借款类别
--参数设置：
ALTER TABLE CMS_LOAN_INFO ADD CLC_ID NUMERIC(10);
GO
DECLARE @CURRENTUSER SYSNAME
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_DESCRIPTION', 
   '借款类别',
   'USER', @CURRENTUSER, 'TABLE', 'CMS_LOAN_INFO', 'COLUMN', 'CLC_ID'
GO

--[BEGIN-BUG]
--修改日期：20120907
--修改人：叶爱军[BUG]
--修改内容：XD-JD03-015 系统功能-借款申请界面
--修改内容：历史数据将借款类别字段自动赋值"022-经营贷款"
--参数设置：
UPDATE CMS_PROVIDE_LOAN_INFO SET CLC_ID = (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_NAME = '经营贷款');
GO
--[END-BUG]

--修改日期：20120905
--修改人：叶爱军
--修改内容：XD-JD03-015 系统功能-借款申请界面
--修改内容：担保方式 增加 组合担保
--参数设置：
INSERT INTO CMS_PROVIDE_LOAN_TYPE (TYPE_CODE, TYPE_NAME, OPERATION_TYPE) VALUES ('05', '组合担保', 'B');
GO

--修改日期：20120905
--修改人：叶爱军
--修改内容：XD-JD03-015 系统功能-借款申请界面
--修改内容：增加新表 借款类别
--参数设置：
CREATE TABLE CMS_LOAN_CLASS (
   CLC_ID               NUMERIC(10)          NOT NULL,
   CLC_PARENT_ID        NUMERIC(10)          NULL,
   CLC_CODE             VARCHAR(50)          NULL,
   CLC_NAME             VARCHAR(100)         NULL,
   CLC_MEMO             VARCHAR(1000)        NULL,
   CLC_ISVALID          NUMERIC(1)           NULL,
   CONSTRAINT PK_CMS_LOAN_CLASS PRIMARY KEY NONCLUSTERED (CLC_ID)
)
GO
DECLARE @CURRENTUSER SYSNAME
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_DESCRIPTION', 
   '借款类别',
   'USER', @CURRENTUSER, 'TABLE', 'CMS_LOAN_CLASS'
GO

DECLARE @CURRENTUSER SYSNAME
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_DESCRIPTION', 
   '类别主键',
   'USER', @CURRENTUSER, 'TABLE', 'CMS_LOAN_CLASS', 'COLUMN', 'CLC_ID'
GO

DECLARE @CURRENTUSER SYSNAME
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_DESCRIPTION', 
   '父级ID',
   'USER', @CURRENTUSER, 'TABLE', 'CMS_LOAN_CLASS', 'COLUMN', 'CLC_PARENT_ID'
GO

DECLARE @CURRENTUSER SYSNAME
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_DESCRIPTION', 
   '代码',
   'USER', @CURRENTUSER, 'TABLE', 'CMS_LOAN_CLASS', 'COLUMN', 'CLC_CODE'
GO

DECLARE @CURRENTUSER SYSNAME
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_DESCRIPTION', 
   '名称',
   'USER', @CURRENTUSER, 'TABLE', 'CMS_LOAN_CLASS', 'COLUMN', 'CLC_NAME'
GO

DECLARE @CURRENTUSER SYSNAME
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_DESCRIPTION', 
   '说明',
   'USER', @CURRENTUSER, 'TABLE', 'CMS_LOAN_CLASS', 'COLUMN', 'CLC_MEMO'
GO

DECLARE @CURRENTUSER SYSNAME
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_DESCRIPTION', 
   '是否有效[0:无效;1:有效]',
   'USER', @CURRENTUSER, 'TABLE', 'CMS_LOAN_CLASS', 'COLUMN', 'CLC_ISVALID'
GO

INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), '0', '01', '再贷款', '中央银行按规定发放的贷款。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), '0', '02', '普通贷款', '贷款人与借款人签订的约定利率、期限并还本付息的贷款合同。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '02'), '021', '消费贷款', '指贷款人向个人借款人发放的，用于购买住房、教育、购买大件耐用消费品及其他生活消费用途的贷款。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '021'), '0211', '个人住房贷款', '贷款人向个人借款人发放的用于购买、建造和大修理各类型住房的贷款。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '021'), '0212', '个人汽车消费贷款', '指贷款人向个人借款人发放的，用于购买自用车的贷款。自用车指借款人购买的、不以生产经营为主要目的的汽车。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '021'), '0213', '助学贷款', '指贷款人向借款人发放的，用于教育目的的贷款。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '0213'), '02131', '国家助学贷款', '指贷款人向借款人发放的，由政府财政提供贴息资金，用于教育目的的贷款。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '0213'), '02132', '一般商业性助学贷款', '指贷款人向借款人发放的，利息完全由借款人承担，用于教育目的的贷款。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '021'), '0219', '其他消费贷款', '指贷款人向个人借款人发放的，用于购买大件耐用消费品及其他生活消费用途的贷款。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '02'), '022', '经营贷款', '指贷款人向借款人发放的，用于合法生产经营的贷款。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '02'), '023', '固定资产贷款', '指贷款人向企（事）业法人或国家规定可以作为借款人的其他组织发放的，用于借款人 固定资产投资的本外币贷款。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), '0', '03', '拆借', '经中国人民银行批准进入全国银行间同业拆借市场的金融机构之间，通过全国统一的同业拆借网络进行的无担保资金融通行为。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), '0', '04', '透支', '指贷款人授予客户一定的信用额度，允许其在信用额度内进行支付或取现，从而获得短 期信贷资金的行为。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '04'), '041', '账户透支', '指贷款人授予借款人一定的信用额度，允许借款人在约定的账户、约定的限额内以透支 的形式获得短期融资和结算便利。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '04'), '042', '贷记卡透支', '发卡机构授予贷记卡持卡人一定的信用额 度，持卡人可在信用额度内进行支付或取现，从而获得短期信贷资金的行为。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '04'), '043', '准贷记卡透支', '发卡机构授予准贷记卡持卡人一定的信用 额度，持卡人可在信用额度内进行支付或取现，从而获得短期信贷资金的行为。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), '0', '05', '垫款', '指金融机构为客户承担第三方责任而垫付的资金。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '05'), '051', '承兑垫款', '指金融机构因承兑商业汇票承担责任为汇票付款人垫付的资金。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '05'), '052', '担保垫款', '指金融机构由于开办担保业务为借款人承担第三方责任而垫付的资金。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '05'), '053', '信用证垫款', '指金融机构由于开出信用证为借款人承担第三方责任而垫付的资金。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '05'), '054', '其他垫款', '指不包括在以上核算范围内的垫款。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), '0', '06', '回购/返售', '指资金融入方与资金融出方以协议的方式，按特定价格出售资产融入资金，并约定在将 来特定日期按指定价格购回相同或类似资 产的交易行为。对于资金融入方，是资产回购；对于资金融出方，是资产返售。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '06'), '061', '债券回购/返售', '指资金融入方与资金融出方以协议的方式，按特定价格出售债券融入资金，并约定在将来特定日期按指定价格购回相同或类似资产的交易行为。对于资金融入方，是债券回购；对于资金融出方，是债券返售。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '06'), '062', '票据回购/返售', '指资金融入方与资金融出方以协议的方式，按特定价格出售票据融入资金，并约定在将 来特定日期按指定价格购回相同或类似资产的交易行为。对于资金融入方，是票据回购；对于资金融出方，是票据返售。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '06'), '063', '贷款回购/返售', '指资金融入方与资金融出方以协议的方式，按特定价格出售贷款融入资金，并约定在将 来特定日期按指定价格购回相同或类似资产的交易行为。对于资金融入方，是贷款回购；对于资金融出方，是贷款返售。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '06'), '064', '股票及其他股权回购/返售', '指资金融入方与资金融出方以协议的方式，按特定价格出售股票及其他股权融入资金，并约定在将来特定日期按指定价格购回相同或类似资产的交易行为。对于资金融入方，是股票及其他股权回购；对于资金融出方，是股票及其他股权返售。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '06'), '065', '黄金回购/返售', '指资金融入方与资金融出方以协议的方式，按特定价格出售黄金融入资金，并约定在将 来特定日期按指定价格购回相同或类似资产的交易行为。对于资金融入方，是黄金回购；对于资金融出方，是黄金返售。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), '0', '07', '黄金、证券借贷', '黄金或证券资产持有方将此类资产转移给资产借入方，资产借入方向其提供资金抵押，并约定在特定日期或一经要求，资产借入方就必须归还相同或类似资产的交易行为。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '07'), '071', '债券借贷', '指债券持有方将债券转移给债券借入方，债券借入方向其提供资金抵押，并约定在特定日期或一经要求，债券借入方就必须归还相同或类似资产的交易行为。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '07'), '072', '票据借贷', '指票据持有方将票据转移给票据借入方，票据借入方向其提供资金抵押，并约定在特定日期或一经要求，票据借入方就必须归还相同或类似资产的交易行为。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '07'), '073', '股票及其他股权借贷', '指股票及其他股权持有方将股票及其他股权转移给资产借入方，股票及其他股权借入方向其提供资金抵押，并约定在特定日期或一经要求，股票及其他股权借入方就必须归还相同或类似资产的交易行为。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '07'), '074', '黄金借贷', '指黄金持有方将黄金转移给资产借入方，黄金借入方向其提供资金抵押，并约定在特定日期或一经要求，黄金借入方就必须归还相同或类似资产的交易行为。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '07'), '075', '其他资产借贷', '指不包括在以上范围内的资产借贷。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), '0', '08', '黄金、证券借贷', '黄金或证券资产持有方将此类资产转移给资产借入方，资产借入方向其提供资金抵押，并约定在特定日期或一经要求，资产借入方就必须归还相同或类似资产的交易行为。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '08'), '081', '国际贸易融资', '指金融机构为进出口商提供的与国际贸易结算相关的融资或信用便利。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_CODE = '08'), '082', '国内贸易融资', '指金融机构为借款人提供的与国内贸易结算相关的融资或信用便利。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), '0', '09', '融资租赁', '出租人根据承租人对租赁物和供货人的选择或认可，将其从供货人处取得的租赁物按合同约定出租给承租人占有、使用，向承租人收取租金的交易活动。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), '0', '10', '打包信贷受让资产', '指金融机构受让其他金融机构出售的由两个或两个以上信贷资产打包组成的组合式信贷资产。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), '0', '11', '转贷款', '指金融机构以自己名义向境外出口信贷机构、金融机构、政府筹资，并将所筹资金转贷给境内机构的贷款。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), '0', '12', '并购贷款', '指贷款人向并购方或其子公司发放的，用于支付并购交易价款的贷款。', 1
GO
INSERT INTO CMS_LOAN_CLASS (CLC_ID, CLC_PARENT_ID, CLC_CODE, CLC_NAME, CLC_MEMO, CLC_ISVALID) SELECT (SELECT ISNULL(MAX(CLC.CLC_ID), 0) + 1 FROM CMS_LOAN_CLASS CLC), '0', '99', '其他贷款', '不在以上范围内的贷款。', 1
GO
--修改日期：20120911
--修改人：叶爱军
--修改内容：XD-JD03-020 系统功能-贷款统计台账
--修改内容：系统菜单 增加 贷款统计台账
--参数设置：
INSERT INTO BT_SYS_RES (RES_CODE, RES_NAME, SYS_CODE, FATHER_CODE, RES_URL, FUNC_FLAG, RES_TYPE, LINK_TARGET, STATUS, RES_ORDER, RMK, REVERSE1, REVERSE2, REVERSE3, REVERSE4, REVERSE5, REVERSE6, REVERSE7, REVERSE8, REVERSE9, REVERSE10, RES_LEVEL, RES_ROLE)
SELECT (SELECT MAX(T1.RES_CODE) + 1 FROM BT_SYS_RES T1), '贷款统计台账', 'cms', RES_CODE, '/cms/LoanTotalTree.jsp', '0', '0', '0', '0', (SELECT MAX(T2.RES_ORDER)+1 FROM BT_SYS_RES T2 WHERE T2.FATHER_CODE = T3.RES_CODE AND T2.SYS_CODE = 'cms'), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 2, '' FROM BT_SYS_RES T3 WHERE T3.RES_NAME = '查询' AND T3.SYS_CODE = 'cms';
GO

--修改日期：20120912
--修改人：叶爱军
--修改内容：XD-JD03-020 系统功能-贷款统计台账
--修改内容：增加 借款类别与操作模块的关联
--参数设置：
CREATE TABLE CMS_LOAN_CLASS_MODULE (
   CMM_ID               NUMERIC(10)          NOT NULL,
   CLC_ID               NUMERIC(10)          NULL,
   CMM_CODE             VARCHAR(100)         NULL,
   CONSTRAINT PK_CMS_LOAN_CLASS_MODULE PRIMARY KEY NONCLUSTERED (CMM_ID)
)
GO

DECLARE @CURRENTUSER SYSNAME
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_DESCRIPTION', 
   '模块与借款类别的关联',
   'USER', @CURRENTUSER, 'TABLE', 'CMS_LOAN_CLASS_MODULE'
GO

DECLARE @CURRENTUSER SYSNAME
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_DESCRIPTION', 
   '主键ID',
   'USER', @CURRENTUSER, 'TABLE', 'CMS_LOAN_CLASS_MODULE', 'COLUMN', 'CMM_ID'
GO

DECLARE @CURRENTUSER SYSNAME
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_DESCRIPTION', 
   '类别主键',
   'USER', @CURRENTUSER, 'TABLE', 'CMS_LOAN_CLASS_MODULE', 'COLUMN', 'CLC_ID'
GO

DECLARE @CURRENTUSER SYSNAME
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_DESCRIPTION', 
   '模块代码',
   'USER', @CURRENTUSER, 'TABLE', 'CMS_LOAN_CLASS_MODULE', 'COLUMN', 'CMM_CODE'
GO

ALTER TABLE CMS_LOAN_CLASS_MODULE
   ADD CONSTRAINT FK_CMS_LOAN_REL_CLCM_CMS_LOAN FOREIGN KEY (CLC_ID)
      REFERENCES CMS_LOAN_CLASS (CLC_ID)
GO

--[BEGIN-BUG]
--修改日期：20120905
--修改人：叶爱军
--修改内容：XD-JD03-015 系统功能-借款申请界面
--修改内容：增加 借款类别与操作模块的关联数据
--参数设置：
INSERT INTO CMS_LOAN_CLASS_MODULE (CMM_ID, CLC_ID, CMM_CODE) SELECT (SELECT ISNULL(MAX(CLCM.CMM_ID), 0) + 1 FROM CMS_LOAN_CLASS_MODULE CLCM), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_NAME = '再贷款'), 'loanTotalQuery';
GO
INSERT INTO CMS_LOAN_CLASS_MODULE (CMM_ID, CLC_ID, CMM_CODE) SELECT (SELECT ISNULL(MAX(CLCM.CMM_ID), 0) + 1 FROM CMS_LOAN_CLASS_MODULE CLCM), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_NAME = '消费贷款'), 'loanTotalQuery';
GO
INSERT INTO CMS_LOAN_CLASS_MODULE (CMM_ID, CLC_ID, CMM_CODE) SELECT (SELECT ISNULL(MAX(CLCM.CMM_ID), 0) + 1 FROM CMS_LOAN_CLASS_MODULE CLCM), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_NAME = '经营贷款'), 'loanTotalQuery';
GO
INSERT INTO CMS_LOAN_CLASS_MODULE (CMM_ID, CLC_ID, CMM_CODE) SELECT (SELECT ISNULL(MAX(CLCM.CMM_ID), 0) + 1 FROM CMS_LOAN_CLASS_MODULE CLCM), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_NAME = '固定资产贷款'), 'loanTotalQuery';
GO
INSERT INTO CMS_LOAN_CLASS_MODULE (CMM_ID, CLC_ID, CMM_CODE) SELECT (SELECT ISNULL(MAX(CLCM.CMM_ID), 0) + 1 FROM CMS_LOAN_CLASS_MODULE CLCM), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_NAME = '拆借'), 'loanTotalQuery';
GO
INSERT INTO CMS_LOAN_CLASS_MODULE (CMM_ID, CLC_ID, CMM_CODE) SELECT (SELECT ISNULL(MAX(CLCM.CMM_ID), 0) + 1 FROM CMS_LOAN_CLASS_MODULE CLCM), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_NAME = '透支'), 'loanTotalQuery';
GO
INSERT INTO CMS_LOAN_CLASS_MODULE (CMM_ID, CLC_ID, CMM_CODE) SELECT (SELECT ISNULL(MAX(CLCM.CMM_ID), 0) + 1 FROM CMS_LOAN_CLASS_MODULE CLCM), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_NAME = '垫款'), 'loanTotalQuery';
GO
INSERT INTO CMS_LOAN_CLASS_MODULE (CMM_ID, CLC_ID, CMM_CODE) SELECT (SELECT ISNULL(MAX(CLCM.CMM_ID), 0) + 1 FROM CMS_LOAN_CLASS_MODULE CLCM), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_NAME = '回购/返售'), 'loanTotalQuery';
GO
INSERT INTO CMS_LOAN_CLASS_MODULE (CMM_ID, CLC_ID, CMM_CODE) SELECT (SELECT ISNULL(MAX(CLCM.CMM_ID), 0) + 1 FROM CMS_LOAN_CLASS_MODULE CLCM), (SELECT CLC.CLC_ID FROM CMS_LOAN_CLASS CLC WHERE CLC.CLC_NAME = '融资租赁'), 'loanTotalQuery';
GO
--[END-BUG]

CREATE VIEW V_CMS_LOAN_BILL AS
SELECT CLI.CORP_ID AS CORP_ID, BC.CORP_CODE, BC.CORP_NAME, CLI.CLC_ID, CONVERT(CHAR(10), CLI.LOAN_DATE, 120) AS LOAN_DATE, CLI.STATUS AS LOAN_STATE,
       SUM(CASE WHEN CLI.CONTRACT_CODE IS NULL THEN 0 ELSE CLI.LOAN_MONEY END) AS CONTRACT_SUM,
       SUM(CASE WHEN CONVERT(CHAR(4), CLI.LOAN_DATE, 120) = CONVERT(CHAR(4), GETDATE(), 120) THEN CLI.LOAN_MONEY ELSE 0 END) AS LOAN_SUM,
       SUM(ISNULL(CLI.LOAN_MONEY, 0)) AS LOAN_SUM_ALL,
       SUM(CASE WHEN CONVERT(CHAR(4), CLR.REPAY_DATE, 120) = CONVERT(CHAR(4), GETDATE(), 120) THEN CLR.REPAY_MONEY ELSE 0 END) AS REPAY_SUM,
       SUM(ISNULL(CLR.REPAY_MONEY, 0)) AS REPAY_SUM_ALL,
       SUM(ISNULL(CLI.LOAN_MONEY, 0)) AS LOAN_MONEY,
       (SUM(ISNULL(CLI.LOAN_MONEY, 0)) - SUM(ISNULL(CLR.REPAY_MONEY, 0))) AS LOAN_MONEY_LAST
  FROM CMS_LOAN_INFO CLI
  LEFT JOIN CMS_LOAN_REPAY CLR ON CLI.BILL_CODE = CLR.LI_CODE
  JOIN BT_CORP BC ON CLI.CORP_ID = BC.ID
 GROUP BY CLI.CORP_ID, BC.CORP_CODE, BC.CORP_NAME, CLI.CLC_ID, CLI.LOAN_DATE, CLI.STATUS;
GO
CREATE VIEW V_CMS_LOAN_BILL_DEATIL AS
SELECT CLI.BILL_CODE, CLI.CORP_ID, CLI.CLC_ID, CONVERT(CHAR(10), CLI.LOAN_DATE, 120) AS LOAN_DATE, CLI.CONTRACT_CODE, CLI.LOAN_ACC AS BANK_ACC, CLI.LOAN_ACC,
       ISNULL(RCD.MONEY, 0) AS MONEY, (CONVERT(CHAR(10), RCP.BEGINDATE, 120) + '至' + CONVERT(CHAR(10), RCP.ENTERDATE, 120)) AS RCP_DATE,
       SUM(CASE WHEN CLI.CONTRACT_CODE IS NULL THEN 0 ELSE CLI.LOAN_MONEY END) AS CONTRACT_SUM,
       SUM(CASE WHEN CONVERT(CHAR(4), CLI.LOAN_DATE, 120) = CONVERT(CHAR(4), GETDATE(), 120) THEN CLI.LOAN_MONEY ELSE 0 END) AS LOAN_SUM,
       SUM(ISNULL(CLI.LOAN_MONEY, 0)) AS LOAN_SUM_ALL,
       SUM(CASE WHEN CONVERT(CHAR(4), CLR.REPAY_DATE, 120) = CONVERT(CHAR(4), GETDATE(), 120) THEN CLR.REPAY_MONEY ELSE 0 END) AS REPAY_SUM,
       SUM(ISNULL(CLR.REPAY_MONEY, 0)) AS REPAY_SUM_ALL,
       SUM(ISNULL(CLI.LOAN_MONEY, 0)) AS LOAN_MONEY,
       CLI.LOAN_RATE, CLI.OVERDUE_RATE, CPLT.TYPE_NAME, CLI.SURETY_EXPLAIN,
       (CONVERT(CHAR(10), CLI.LOAN_DATE, 120) + '至' + CONVERT(CHAR(10), CLI.REPAY_DATE, 120)) AS LOAN_S_E_DATE,
       CLI.STATUS,
       (SUM(ISNULL(CLI.LOAN_MONEY, 0)) - SUM(ISNULL(CLR.REPAY_MONEY, 0))) AS LOAN_MONEY_LAST,
       CLI.RMK
 FROM CMS_LOAN_INFO CLI
 JOIN CMS_PROVIDE_LOAN_TYPE CPLT ON CLI.LOAN_TYPE = CPLT.TYPE_CODE
 JOIN BT_CORP BC ON CLI.CORP_ID = BC.ID
 LEFT JOIN CMS_LOAN_REPAY CLR ON CLI.BILL_CODE = CLR.LI_CODE
 LEFT JOIN RAT_CPRATION RCP ON RCP.COMPCODE = BC.CORP_CODE
 LEFT JOIN RAT_CPRATION_DETAIL RCD ON RCP.CODE = RCD.DISTRIBUTE_CODE AND RCD.ITEM_CODE = CLI.ITEM_CODE
 WHERE CLI.STATUS >= 95 AND CPLT.OPERATION_TYPE = 'A'
 GROUP BY CLI.BILL_CODE, CLI.CORP_ID, CLI.CLC_ID, RCD.ITEM_CODE, CLI.LOAN_DATE, CLI.REPAY_DATE, CLI.CONTRACT_CODE, CLI.LOAN_ACC, RCD.MONEY, RCP.BEGINDATE, RCP.ENTERDATE, CLI.LOAN_RATE, CLI.OVERDUE_RATE, CPLT.TYPE_NAME, CLI.SURETY_EXPLAIN, CLI.STATUS, CLI.RMK;